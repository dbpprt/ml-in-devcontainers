# Builds GPU docker image of PyTorch
# Uses multi-staged approach to reduce size

# Stage 1
# Use base conda image to reduce time
FROM continuumio/miniconda3:latest AS compile-image

# Specify target python version
ENV PYTHON_VERSION=3.10

# Install dependencies
RUN apt-get update && \
    apt-get install -y curl git wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists*

# Create our conda env
RUN conda create --name dev python=${PYTHON_VERSION} ipython jupyter pip

# We don't install pytorch here yet since CUDA isn't available
# instead we use the direct torch wheel
ENV PATH /opt/conda/envs/dev/bin:$PATH

# Activate our bash shell
RUN chsh -s /bin/bash
SHELL ["/bin/bash", "-c"]

# Activate the conda env and install torch + accelerate
RUN source activate dev && \
    python3 -m pip install --no-cache-dir \
    git+https://github.com/dennisbappert/ml-in-devcontainers#egg=ml-in-devcontainers[dev] \
    --extra-index-url https://download.pytorch.org/whl/cu117

# Stage 2
FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 AS build-image
COPY --from=compile-image /opt/conda /opt/conda
ENV PATH /opt/conda/bin:$PATH

# Install dependencies
RUN apt-get update && \
    apt install -y bash \
    build-essential \
    git \
    curl \
    ca-certificates \
    wget \
    && rm -rf /var/lib/apt/lists
    
RUN echo "source activate dev" >> ~/.profile

# Activate bash shell and conda env
CMD ["/bin/bash"]